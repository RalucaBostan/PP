import threading
import time

hashmap = {i:i for i in range(5000)}

dictionar = dict({i : 5000 - i for i in range(5000)})

def actiuneThread(hmap,dct):
    lock = threading.RLock()
    min = lambda x,y : len(x) if len(x) < len(y) else len(y)
    for i in range(min(hmap,dct) - 1):
        lock.acquire()
        dct[i] = dct[i] * hmap[i] + dct[i+1]
        lock.release()

thread1 = threading.Thread(target=actiuneThread,args=(hashmap,dictionar))
thread2 = threading.Thread(target=actiuneThread,args=(hashmap,dictionar))
thread1.start()
thread2.start()
thread1.join()
thread2.join()

print(dictionar)
