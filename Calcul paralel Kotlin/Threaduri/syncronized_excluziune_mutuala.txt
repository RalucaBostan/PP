import java.util.concurrent.*

class gigel{
    @Synchronized
    fun syncronizedMethod(){
        println("Sunt in metoda sincronizata ${Thread.currentThread() }}")
    }

    fun methodWithSyncronizedBlock(){
        println("Zona fara sincronizare : ${Thread.currentThread()}}")
        synchronized(this){
            println("Sectiune cu sincronizare : ${Thread.currentThread()}")
        }
    }
}


fun main(args : Array<String>){
    val g = gigel()
    val executor = Executors.newFixedThreadPool(5)
    for(i in 0..9){
        executor.execute(Runnable {
            println("Sunt in firul ${i}")
            g.syncronizedMethod()
            g.methodWithSyncronizedBlock()
        })
    }
    executor.shutdown()
    while(!executor.isTerminated){ }
    println("S-au terminat toate firele din piscina")
}